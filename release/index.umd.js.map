{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["const { useState, useEffect, useLayoutEffect, useRef } = require('react');\r\n\r\nconst fetchData = (url, signal, setState) => {\r\n  fetch(url, { signal })\r\n    .then(rsp =>\r\n      rsp.ok\r\n        ? rsp\r\n        : Promise.reject({\r\n            message: rsp.statusText,\r\n            status: rsp.status\r\n          })\r\n    )\r\n    .then(rsp => rsp.json())\r\n    .then(data => {\r\n      setState(oldState => ({\r\n        ...oldState,\r\n        data,\r\n        loading: oldState.loading - 1\r\n      }));\r\n    })\r\n    .catch(err => {\r\n      const error = err.name !== 'AbortError' ? err : null;\r\n\r\n      setState(oldState => ({\r\n        ...oldState,\r\n        error,\r\n        loading: oldState.loading - 1\r\n      }));\r\n    });\r\n};\r\n\r\nconst useAbortableFetch = url => {\r\n  const [state, setState] = useState({\r\n    data: null,\r\n    loading: 0,\r\n    error: null,\r\n    controller: null\r\n  });\r\n\r\n  const isMounted = useRef(false);\r\n  useLayoutEffect(() => {\r\n    isMounted.current = true;\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(\r\n    () => {\r\n      const controller = new AbortController();\r\n      setState(oldState => ({\r\n        data: null,\r\n        loading: oldState.loading + 1,\r\n        error: null,\r\n        controller\r\n      }));\r\n\r\n      fetchData(url, controller.signal, state => {\r\n        if (isMounted.current) {\r\n          setState(state);\r\n        }\r\n      });\r\n\r\n      return () => controller.abort();\r\n    },\r\n    [url]\r\n  );\r\n\r\n  return {\r\n    data: state.data,\r\n    loading: !!state.loading,\r\n    error: state.error,\r\n    abort: () => state.controller && state.controller.abort()\r\n  };\r\n};\r\n\r\nmodule.exports = useAbortableFetch;\r\n"],"names":["require","module","exports","url","useState","data","loading","error","controller","isMounted","useRef","useLayoutEffect","current","useEffect","AbortController","setState","oldState","signal","fetch","then","rsp","ok","Promise","reject","message","statusText","status","json","Object","catch","err","name","fetchData","state","abort"],"mappings":"gJAAyDA,QAAQ,mEA4EjEC,OAAOC,iBA7CmBC,SACEC,EAAS,CACjCC,KAAM,KACNC,QAAS,EACTC,MAAO,KACPC,WAAY,qBAGRC,EAAYC,GAAO,UACzBC,oBACEF,EAAUG,SAAU,aAElBH,EAAUG,SAAU,IAErB,IAEHC,iBAEUL,EAAa,IAAIM,uBACvBC,WAASC,UACPX,KAAM,KACNC,QAASU,EAASV,QAAU,EAC5BC,MAAO,gBACPC,cApDWL,EAAKc,EAAQF,GAC9BG,MAAMf,EAAK,QAAEc,IACVE,cAAKC,UACJA,EAAIC,GACAD,EACAE,QAAQC,OAAO,CACbC,QAASJ,EAAIK,WACbC,OAAQN,EAAIM,WAGnBP,cAAKC,UAAOA,EAAIO,SAChBR,cAAKd,GACJU,WAASC,UAAaY,iBACjBZ,QACHX,EACAC,QAASU,EAASV,QAAU,QAG/BuB,eAAMC,OACCvB,EAAqB,eAAbuB,EAAIC,KAAwBD,EAAM,KAEhDf,WAASC,UAAaY,iBACjBZ,SACHT,EACAD,QAASU,EAASV,QAAU,QA+B9B0B,CAAU7B,EAAKK,EAAWS,gBAAQgB,GAC5BxB,EAAUG,SACZG,EAASkB,uBAIAzB,EAAW0B,UAE1B,CAAC/B,IAGI,CACLE,KAAM4B,EAAM5B,KACZC,UAAW2B,EAAM3B,QACjBC,MAAO0B,EAAM1B,MACb2B,wBAAaD,EAAMzB,YAAcyB,EAAMzB,WAAW0B"}